import sys
import os

# Add path of tetris env
current_dir = os.path.dirname(os.path.abspath(__file__))
parent_dir = os.path.join(current_dir, '..') 
sys.path.append(parent_dir)
from tetris_env import * 

# Going through a bunch of tetris grids to evaluate performance of env

# tetris_grid = [
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # row 0 (top)
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 1
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 2
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 3
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 4
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 5
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 6
#     ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 7
#     ['#', '.', '#', '.', '.', '.', '.', '.', '.', '.'],  # 8
#     ['#', '#', '#', '.', '.', '#', '.', '.', '.', '.'],  # 9
#     ['#', '.', '#', '.', '#', '#', '.', '.', '.', '.'],  # 10
#     ['#', '.', '#', '#', '#', '#', '#', '#', '#', '.'],  # 11
#     ['#', '#', '#', '#', '#', '#', '#', '#', '#', '.'],  # 12
#     ['#', '#', '#', '#', '#', '#', '#', '#', '#', '.'],
#     ['#', '#', '#', '#', '#', '#', '#', '#', '#', '.'],
#     ['#', '#', '.', '#', '#', '#', '.', '.', '#', '.'],
#     ['#', '#', '.', '#', '#', '#', '.', '.', '#', '#'],
#     ['#', '#', '#', '#', '#', '#', '.', '.', '#', '#'],
#     ['#', '#', '#', '#', '#', '#', '.', '.', '#', '#'],
#     ['#', '#', '#', '#', '#', '#', '.', '.', '#', '#'],
#     ['#', '#', '#', '#', '#', '#', '#', '.', '#', '#'],
#     ['#', '#', '#', '#', '#', '#', '#', '.', '#', '#'],  # row 21 (bottom)
# ]

tetris_grid = [
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # row 0 (top)
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 1
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 2
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 3
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 4
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 5
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 6
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],  # 7
    ['#', '#', '#', '.', '.', '.', '.', '.', '.', '.'],  # 8
    ['#', '#', '#', '.', '.', '.', '.', '.', '.', '.'],  # 9
    ['#', '#', '#', '#', '#', '#', '.', '.', '#', '#'],  # 10
    ['#', '#', '#', '#', '#', '#', '#', '.', '#', '#'],  # 11
    ['#', '#', '#', '#', '#', '#', '#', '#', '#', '.'],  # 12
    ['#', '#', '#', '#', '#', '#', '#', '#', '#', '.'],
    ['#', '#', '#', '#', '#', '#', '#', '#', '#', '.'],
    ['#', '#', '.', '#', '#', '#', '.', '.', '#', '.'],
    ['#', '#', '.', '#', '#', '#', '.', '.', '#', '#'],
    ['#', '#', '#', '#', '#', '#', '.', '.', '#', '#'],
    ['#', '#', '#', '#', '#', '#', '.', '.', '#', '#'],
    ['#', '#', '#', '#', '#', '#', '.', '.', '#', '#'],
    ['#', '#', '#', '#', '#', '#', '#', '.', '#', '#'],
    ['#', '#', '#', '#', '#', '#', '#', '.', '#', '#'],  # row 21 (bottom)
]

env = TetrisEnv(headless=True)
heuristic_env = HeuristicTetrisEnv()
env.grid = np.array(tetris_grid)
env.start()
env.controlled_block = Block(Block.T)

print(heuristic_env.find_best_move(env.grid, env.controlled_block))